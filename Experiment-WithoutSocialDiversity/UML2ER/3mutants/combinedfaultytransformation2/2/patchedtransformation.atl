-- @path SimpleUml=/example.tracts/uml2er/metamodels/SimpleUml.ecore
-- @path ER=/example.tracts/uml2er/metamodels/ER.ecore
-- @atlcompiler emftvm
module SimpleUml2ER;
create OUT : ER from IN : SimpleUml;

abstract rule NamedElement {
 from
  s : SimpleUml!NamedElement
 to
  t : ER!Element (
   name <- s.name
  )
}

rule Package extends NamedElement {
 from
  s : SimpleUml!Package
 to
  t : ER!ERModel (
   entities <- s.ownedElements
  )
}

rule Class extends NamedElement {
 from
  s : SimpleUml!Class
 to
  t : ER!EntityType (
   features <- s.ownedProperty
  )
}

abstract rule Property extends NamedElement {
 from
  s : SimpleUml!Property
 to
  t : ER!Feature
}

rule Attributes extends Property {
 from
  s : SimpleUml!Property
  (
   not s.primitiveType.oclIsUndefined() and s.complexType.oclIsUndefined()
  )
 to
  t : ER!Attribute (
   type <- s.primitiveType
  )
}

abstract rule References extends Property {
 from
  s : SimpleUml!Property
  (
   not s.complexType.oclIsUndefined()
  )
 to
  t : ER!Reference (
   type <- s.complexType
  )
}

rule WeakReferences extends References {
 from
  s : SimpleUml!NamedElement
  (
   not s.isContainment
  )
 to
  t : ER!WeakReference
}

rule StrongReferences extends References {
 from
  s : SimpleUml!Property
  (
   s.isContainment
  )
 to
  t : ER!StrongReference
}

-- MUTATION "Deletion of Binding" name in t (line 64:1-64:16 of original transformation)


-- MUTATION "InPattern Element Modification" from s:Property to s:NamedElement (line 70:1-70:23 of original transformation)


-- MUTATION "Binding-target Modification" from name to type (line 63:1-63:22 of original transformation)


-- MUTATION "Creation of Binding" features in t (line 33:1-33:18 of original transformation)

